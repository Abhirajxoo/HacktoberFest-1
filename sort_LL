Node* rev(Node* head){
    Node* p=NULL;
    Node* q=head;
    Node* r=head->next;
    while(q->next){
        q->next=p;
        p=q;
        q=r;
        r=r->next;
    }
    q->next=p;
    return q;
}
Node* merge(Node* h,Node* h1){
    if(!h)return h1;
    if(!h1)return h;
    Node* t;
    if(h->data<h1->data){
        t=h;
        h->next=merge(h->next,h1);
    }
    else{
        t=h1;
        h1->next=merge(h,h1->next);
    }
    return t;
}
void sort(Node **head)
{
     // Code here
     
     struct Node* ptr=*head;
     Node* h1=ptr->next;
     ptr=ptr->next;
     if(ptr==NULL)return;
     Node* trav=*head;
     int i=0;
     while(trav){
         if(trav->next==NULL){
             ptr->next=NULL;
             trav->next=NULL;
             break;
         }
         else{
            if(i%2){
                ptr->next=trav->next;
                ptr=ptr->next;
            }
            else{
                 trav->next=ptr->next;
                 trav=trav->next;
            }
            i++;
         }
         if(ptr->next==NULL){
             trav->next=NULL;
             break;
         }
     }
     Node* h=rev(h1);
     *head=merge(*head,h);  
}
